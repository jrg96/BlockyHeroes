// <auto-generated />
using System;
using BlockyHeroesBackend.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlockyHeroesBackend.Infrastructure.Migrations
{
    [DbContext(typeof(BlockyHeroesDbContext))]
    partial class BlockyHeroesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.Equip.Equip", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equips");
                });

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.Equip.EquipLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CoinsToPromote")
                        .HasColumnType("bigint");

                    b.Property<Guid>("EquipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("HorizontalSpeed")
                        .HasColumnType("real");

                    b.Property<float>("JumpForce")
                        .HasColumnType("real");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Lives")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipId");

                    b.ToTable("EquipLevels");
                });

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Coins")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaxStamina")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varbinary(128)");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.User.UserEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EquipLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipLevelId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEquipments");
                });

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.Equip.EquipLevel", b =>
                {
                    b.HasOne("BlockyHeroesBackend.Domain.Entities.Equip.Equip", "Equip")
                        .WithMany("EquipmentEvolutions")
                        .HasForeignKey("EquipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equip");
                });

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.User.UserEquipment", b =>
                {
                    b.HasOne("BlockyHeroesBackend.Domain.Entities.Equip.EquipLevel", "EquipLevel")
                        .WithMany("UserEquipment")
                        .HasForeignKey("EquipLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlockyHeroesBackend.Domain.Entities.User.User", "Owner")
                        .WithMany("UserEquipment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipLevel");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.Equip.Equip", b =>
                {
                    b.Navigation("EquipmentEvolutions");
                });

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.Equip.EquipLevel", b =>
                {
                    b.Navigation("UserEquipment");
                });

            modelBuilder.Entity("BlockyHeroesBackend.Domain.Entities.User.User", b =>
                {
                    b.Navigation("UserEquipment");
                });
#pragma warning restore 612, 618
        }
    }
}
